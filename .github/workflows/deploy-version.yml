name: Deploy version
on:
  workflow_call:
    inputs:
      version_with_sha:
        type: string
        required: true
      environment:
        type: string
        required: true

env:
  FLYCTL_VERSION: 0.3.55
  FRONTEND_INTERNAL_PORT: 3000

jobs:
  frontend-deploy:
    name: "Frontend: Deploy"
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}-frontend
      url: https://${{ vars.CANONICAL_HOSTNAME }}/
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: ${{ env.FLYCTL_VERSION }}
      - name: Deploy frontend
        run: |
          flyctl deploy \
          --app ${{ vars.FLY_APP }} \
          --config apps/frontend/${{ vars.FLY_CONFIG }} \
          --image registry.fly.io/fxmk-frontend-staging:v${{ inputs.version_with_sha }} \
          --env CANONICAL_HOSTNAME=${{ vars.CANONICAL_HOSTNAME }} \
          --env PAYLOAD_CMS_BASE_URL=${{ vars.PAYLOAD_CMS_BASE_URL }} \
          --env IMAGEKIT_BASE_URL=${{ vars.IMAGEKIT_BASE_URL }} \
          --env ANALYTICS_DOMAIN=${{ vars.ANALYTICS_DOMAIN }} \
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  cms-deploy:
    name: "CMS: Deploy"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    environment:
      name: ${{ inputs.environment }}-cms
      url: https://${{ vars.CANONICAL_HOSTNAME }}/
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: ${{ env.FLYCTL_VERSION }}
      - name: Deploy CMS
        run: |
          flyctl deploy \
            --app ${{ vars.FLY_APP }} \
            --config apps/cms/${{ vars.FLY_CONFIG }} \
            --image registry.fly.io/fxmk-cms-staging:v${{ inputs.version_with_sha }} \
            --env MEDIA_S3_REGION=${{ vars.MEDIA_S3_REGION }} \
            --env MEDIA_S3_BUCKET=${{ vars.MEDIA_S3_BUCKET }} \
            --env CACHE_REFRESH_TARGET_TYPE=fly \
            --env CACHE_REFRESH_TARGET_ARG=${{ vars.FRONTEND_FLY_APP }},${{ env.FRONTEND_INTERNAL_PORT }} \
            --env FRONTEND_BASE_URL=${{ vars.FRONTEND_BASE_URL }} \
            --env IMAGEKIT_BASE_URL=${{ vars.IMAGEKIT_BASE_URL }} \
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
